@Library('ezc-jenkins-library@init') _

pipeline {
    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(daysToKeepStr: '10', numToKeepStr: '10', artifactNumToKeepStr: '10', artifactDaysToKeepStr: '10'))
    }
    agent {
        label "master"
    }

    parameters {
        booleanParam name: 'Release', defaultValue: false, description: 'Build release version'
        booleanParam name: 'ScanSonar', defaultValue: false, description: 'Scan Sonarqube for CodeQuality'
    }

    stages {
        stage('Prepare') {
            agent {
                docker {
                    image 'node:20.11.0-alpine3.19'
                    reuseNode true
                }
            }
            steps {
                script {
                    common.populateBuildOption(buildSetting)
                    sh 'node --version'
                }
                print "TODO: Get git repo info"
                print "TODO: Get app build info"
            }
        }

        stage('Tag release') {
            agent {
                docker {
                    image 'node:20.11.0-alpine3.19'
                    reuseNode true
                }
            }
            when {
                expression {
                    expression { params.Release }
                }
            }
            steps {
                print 'TODO: Tag version on Github'
            }
        }

        stage('Build and Test') {
            agent {
                docker {
                    image 'node:20.11.0-alpine3.19'
                    reuseNode true
                }
            }
            steps {
                script {
                    // print 'TODO: Add build command'
                    common.cmd "npm install"
                    // sh 'npm install'
                    print 'TODO: Add test command'
                    print 'TODO: Add publish command'
                }
            }
        }
        stage('Code Quality') {
            agent {
                docker {
                    image 'node:20.11.0-alpine3.19'
                    reuseNode true
                }
            }
            when {
                expression {
                    expression { params.ScanSonar }
                }
            }
            steps {
                script {
                    print 'TODO: Add publish command'
                    common.cmd "echo Test lib"
                }
            }
        }

        stage('Build Docker Image') {
            agent {
                docker {
                    image "docker:dind"
                    reuseNode true
                }
            }
            when {
                expression {
                    expression { params.Release }
                }
            }
            steps {
                script {
                    common.buildImage(buildSetting)

                }
            }
        }
    }

    post {
        always {
            script {
                print 'TODO: Notify GoogleChat build status'
                // common.notifyGoogleChat("This is test message from EZC GreenBee CICD Chatbot")
            }
        }
        cleanup {
            cleanWs()
        }
    }
}